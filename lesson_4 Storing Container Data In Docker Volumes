Working with docker volumes
    1)  docker volume ls
    2)  docker run -d --name db1 postgres:12.1
    3)  docker run -d --name db2 postgres:12.1
    4)  docker ps
    5)  docker volume ls # postgres container create anonimus volume
    6)  docker inspect db1 -f '{{ json .Mounts }}' | python -m json.tool # output docker volume details
    7)  docker run -d --rm --name dbTmp postgres:12.1 # removing container removes also it's volume(anonimus)
    8)  docker inspect dbTmp
    9)  docker volume create website # create a volume
   10)  sudo cp -r /home/cloud_user/widget-factory-inc/web/* /var/lib/docker/volumes/website/_data/ # copy content to a volume (volumes stored in /var/lib/docker/volumes)
   11)  sudo ls /var/lib/docker/volumes/website/_data/
   12)  docker run -d --name web1 -p 8080:80 -v website:/usr/local/apache2/htdocs:ro httpd:2.4 # running container with pre-created volume
   13)  docker ps -a 
   14)  docker rm db2
   15)  docker volume prune # remove unused volumes

Backup and restore
  Backup first method
    1  docker volume inspect website
    2  tar czf /tmp/website_$(date +%Y-%m-%d-%H%M).tgz -C /var/lib/docker/volumes/website/_data .
    4  ls -l /tmp//website_2023-06-19-1220.tgz
    5  tar tf /tmp/website_2023-06-19-1220.tgz
 Backup second method
   1  docker run -it --rm -v website:/website -v /tmp:/backup bash tar czf /backup/website_$(date +%Y-%m-%d-%H%M).tgz -C /website .
   2  ls -l /tmp
   
 Restore
   1 cd /var/lib/docker/volumes/website/_data/
   2 tar xf /tmp/website.tgz .
 
